{"version":3,"sources":["DragDrop.js","Clock.js","ClassDiagram.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ClassDiagram","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","setState","_this2","react_default","a","createElement","className","onClick","choice","React","Component","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","ClassBlock","activeDrags","deltaPosition","x","y","controlledPosition","e","ui","_this$state$deltaPosi","deltaX","deltaY","preventDefault","stopPropagation","_this$state$controlle","position","onControlledDrag","onStop","dragHandlers","onStart","_this$state","react_draggable_default","assign","bounds","grid","App","style","overflow","src_ClassDiagram","src","logo","alt","src_Clock","DragDrop","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d569dc20.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ClassDiagram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n        };\r\n    }\r\n\r\n    choice() {\r\n        if(this.state.value == null) \r\n        {\r\n            this.setState({value : 'hi'});\r\n        }\r\n        else if(this.state.value != null)\r\n        {\r\n            this.setState({value : null});}\r\n        }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className = \"ClassDiagram\"\r\n                onClick={() => {this.choice(0)}}\r\n            >\r\n                {this.state.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassDiagram;","import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {date: new Date()};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Hello, world!</p>\r\n        <p>It is {this.state.date.toLocaleTimeString()}.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nclass ClassBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeDrags: 0,\r\n            deltaPosition: {\r\n            x: 0, y: 0\r\n            },\r\n            controlledPosition: {\r\n            x: -400, y: 200\r\n            }\r\n        };\r\n      }\r\n\r\n    // getInitialState() {\r\n    // return {\r\n    //     activeDrags: 0,\r\n    //     deltaPosition: {\r\n    //     x: 0, y: 0\r\n    //     },\r\n    //     controlledPosition: {\r\n    //     x: -400, y: 200\r\n    //     }\r\n    // };\r\n    // }\r\n\r\n    handleDrag(e, ui) {\r\n    const {x, y} = this.state.deltaPosition;\r\n    this.setState({\r\n        deltaPosition: {\r\n        x: x + ui.deltaX,\r\n        y: y + ui.deltaY,\r\n        }\r\n    });\r\n    }\r\n\r\n    // onStart() {\r\n    //     this.setState({\r\n    //         activeDrags: ++this.state.activeDrags\r\n    //     });\r\n    // }\r\n\r\n    // onStop() {\r\n    //     this.setState({\r\n    //         activeDrags: --this.state.activeDrags\r\n    //     });\r\n    // }\r\n\r\n    // For controlled component\r\n    adjustXPos(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {x, y} = this.state.controlledPosition;\r\n    this.setState({controlledPosition: {x: x - 10, y}});\r\n    }\r\n\r\n    adjustYPos(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {controlledPosition} = this.state;\r\n    const {x, y} = controlledPosition;\r\n    this.setState({controlledPosition: {x, y: y - 10}});\r\n    }\r\n\r\n    onControlledDrag(e, position) {\r\n    const {x, y} = position;\r\n    this.setState({controlledPosition: {x, y}});\r\n    }\r\n\r\n\r\n    onControlledDragStop(e, position) {\r\n    this.onControlledDrag(e, position);\r\n    this.onStop();\r\n    }\r\n\r\n    render() {        \r\n        const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\r\n        const {deltaPosition, controlledPosition} = this.state;\r\n      return ( \r\n\r\n        <Draggable \r\n            bounds=\"parent\" \r\n            grid={[20, 20]} \r\n            {...dragHandlers}\r\n            >            \r\n            <div className=\"box\">\r\n                <p>\r\n                    Name\r\n                </p>\r\n                <hr />\r\n                <p>\r\n                    Variables\r\n                </p>\r\n                <hr />\r\n                <p>\r\n                    Methods\r\n                </p>\r\n            </div>\r\n        </Draggable>\r\n        \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ClassBlock;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ClassDiagram from './DragDrop';\r\nimport Clock from './Clock';\r\nimport ClassBlock from './ClassDiagram';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>\r\n          Header.\r\n        </p>\r\n      </header>\r\n\r\n      <body className=\"App-body\">\r\n        \r\n        <div className=\"Menu\">\r\n          <p>\r\n            Menu.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"Workspace\" style={{position: 'relative', overflow: 'auto'}}>\r\n          \r\n          {<ClassBlock />}\r\n          {<ClassBlock />} \r\n          \r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload... <br/>\r\n            lala~ <br />\r\n            {<Clock />}\r\n            {<ClassDiagram />}\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"Menu\">\r\n          <p>\r\n            Menu.\r\n          </p>\r\n        </div>\r\n\r\n      </body>\r\n\r\n      <footer className=\"App-footer\">\r\n        <p>\r\n          Footer.\r\n        </p>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}